View(fechas)
# GENERACIÓN DE TABLA RESUMIDA DE ALUMNOS Y PORCENTAJES OBTENIDOS
summary(datos)
alumnos <- unique(datos$Nombre.del.estudiante)
alumnos
datos <- read.csv(file.choose())
datos
View(datos)
datos[datos$Tipo.de.tarea != "Articulo", ]
datos[datos$Tipo.de.tarea != "Artículo", ]
datos["URL.de.la.tarea"] = NULL
datos
View(datos)
summary(datos)
datos[datos$Tipo.de.tarea != "Artículo", ]
View(datos)
datos["Porcentaje.Act"] <- datos$Mejor.puntuación.obtenida/datos$Puntos.posibles
View(datos)
datos["Porcentaje.Act"] <-NULL
View(datos)
datos[datos$Nombre.del.estudiante == "naovel16" &
datos$Número.de.intentos > 0]
datos[datos$Nombre.del.estudiante == "naovel16" &
datos$Número.de.intentos > 0, c(2:6, 11)]
datos[(datos$Nombre.del.estudiante == "naovel16" &
datos$Número.de.intentos > 0) , c(2:6, 11)]
datos[(datos$Nombre.del.estudiante == "naovel16" &
datos$Número.de.intentos > 0) , c(2:6)]
datos[(datos$Nombre.del.estudiante == "naovel16" &
datos$Número.de.intentos > 0) , c(2:6, 11)]
datos["Porcentaje.Act"] <- datos$Mejor.puntuación.obtenida/datos$Puntos.posibles
tapply(iris$Petal.Length, iris$Species, mean)
datos[(datos$Nombre.del.estudiante == "naovel16" &
datos$Número.de.intentos > 0) , c(2:6, 11)]
datos[(datos$Nombre.del.estudiante == "naovel16" &
datos$Número.de.intentos > 0) , c(2:6, 11)]
datos[(datos$Nombre.del.estudiante == "naovel16" &
datos$Número.de.intentos > 0) , c(2:6, 11)]
datos[(datos$Nombre.del.estudiante == "naovel16" &
datos$Número.de.intentos > 0) , c(2:6)]
# datos["Porcentaje.Act"] <- datos$Mejor.puntuación.obtenida/datos$Puntos.posibles
datos["Porcentaje.Act"] <- NULL
datos[(datos$Nombre.del.estudiante == "naovel16" &
datos$Número.de.intentos > 0) , c(2:6)]
datos[(datos$Nombre.del.estudiante == "naovel16" &
datos$Número.de.intentos > 0 &
datos$Tipo.de.tarea != "Artículo") , c(2:6)]
datos[(datos$Nombre.del.estudiante == "naovel16" &
datos$Número.de.intentos > 0 &
datos$Tipo.de.tarea != "Artículo") , c(2:6)]
summary(
datos[(datos$Nombre.del.estudiante == "naovel16" &
datos$Número.de.intentos > 0 &
datos$Tipo.de.tarea != "Artículo") , c(2:6)]
)
str(
datos[(datos$Nombre.del.estudiante == "naovel16" &
datos$Número.de.intentos > 0 &
datos$Tipo.de.tarea != "Artículo") , c(2:6)]
)
str(
datos[(datos$Nombre.del.estudiante == "naovel16" &
datos$Número.de.intentos > 0 &
# datos$Tipo.de.tarea != "Artículo"
) , c(2:6)]
str(
datos[(datos$Nombre.del.estudiante == "naovel16" &
datos$Número.de.intentos > 0
# datos$Tipo.de.tarea != "Artículo"
) , c(2:6)]
)
str(
datos[(datos$Nombre.del.estudiante == "naovel16" &
datos$Número.de.intentos >= 0
# datos$Tipo.de.tarea != "Artículo"
) , c(2:6)]
)
str(
datos[(datos$Nombre.del.estudiante == "naovel16" &
datos$Número.de.intentos >= 0
datos$Tipo.de.tarea != "Artículo") , c(2:6)]
str(
datos[(datos$Nombre.del.estudiante == "naovel16" &
datos$Número.de.intentos >= 0 &
datos$Tipo.de.tarea != "Artículo") , c(2:6)]
)
nrow(
datos[(datos$Nombre.del.estudiante == "naovel16" &
datos$Número.de.intentos >= 0 &
datos$Tipo.de.tarea != "Artículo") , c(2:6)]
)
nrow(
datos[(datos$Nombre.del.estudiante == "naovel16" &
datos$Número.de.intentos >= 0 ) , c(2:6)]
)
datos[(datos$Nombre.del.estudiante == "naovel16" &
datos$Número.de.intentos >= 0 ) , c(2:6)]
str(datos)
datos <- read.csv("~/Descargas/Matemáticas.Básicas.csv", stringsAsFactors=TRUE)
View(datos)
str(datos)
# Eliminar columna de URL
datos["URL.de.la.tarea"] = NULL
str(datos)
datos[(datos$Nombre.del.estudiante == "naovel16" &
datos$Número.de.intentos >= 0 ) , c(2:6)]
nrow(
datos[(datos$Nombre.del.estudiante == "naovel16" &
datos$Número.de.intentos >= 0 ) , c(2:6)]
)
nrow(
datos[(datos$Nombre.del.estudiante == "naovel16") , c(2:6)]
)
nrow(
datos[(datos$Nombre.del.estudiante == "naovel16") ,]
)
na.omit(datos[(datos$Nombre.del.estudiante == "naovel16") ,])
na.omit(datos[(datos$Nombre.del.estudiante == "naovel16") , c(2:5)])
nrow(
na.omit(datos[(datos$Nombre.del.estudiante == "naovel16") , c(2:5)])
)
nrow(
datos[(datos$Nombre.del.estudiante == "naovel16" &
na.omit(datos$Número.de.intentos)) , c(2:5)]
)
datos[(datos$Nombre.del.estudiante == "naovel16" &
na.omit(datos$Número.de.intentos)) , c(2:5)]
nrow(
datos[(datos$Nombre.del.estudiante == "naovel16" &
na.omit(datos$Número.de.intentos)) , c(2:5)]
)
str(
datos[(datos$Nombre.del.estudiante == "naovel16" &
na.omit(datos$Número.de.intentos)) , c(2:5)]
)
str(
datos[(datos$Nombre.del.estudiante == "naovel16" &
datos$Número.de.intentos > -1) , c(2:5)]
)
datos[(datos$Nombre.del.estudiante == "naovel16" &
datos$Número.de.intentos > -1) , c(2:5)]
datos[(datos$Nombre.del.estudiante == "naovel16" &
datos$Número.de.intentos > -1) , c(2:5)]
"
& datos$Nombre.del.estudiante == "naovel16"
datos[(datos$Tipo.de.tarea != "Artículo"
& datos$Nombre.del.estudiante == "naovel16"
& datos$Número.de.intentos >= 0) , c(2:5)]
str(
datos[(datos$Tipo.de.tarea != "Artículo"
& datos$Nombre.del.estudiante == "naovel16"
& datos$Número.de.intentos >= 0) , c(2:5)]
)
str(datos)
summary(datos)
str(
datos[(datos$Nombre.del.estudiante == "naovel16"
& datos$Número.de.intentos >= 0) , c(2:5)]
)
datos[(datos$Nombre.del.estudiante == "naovel16"
& datos$Número.de.intentos >= 0
& datos$Número.de.intentos != is.NA) , c(2:5)]
is.na(datos$Número.de.intentos)
datos[(datos$Nombre.del.estudiante == "naovel16"
& datos$Número.de.intentos >= 0
& is.na(datos$Número.de.intentos)) , c(2:5)]
datos[(datos$Nombre.del.estudiante == "naovel16"
& datos$Número.de.intentos >= 0
& is.na(datos$Número.de.intentos)) , c(2:6)]
datos[(datos$Nombre.del.estudiante == "naovel16"
& datos$Número.de.intentos >= 0
& !is.na(datos$Número.de.intentos)) , c(2:6)]
datos[(datos$Nombre.del.estudiante == "naovel16"
& datos$Número.de.intentos >= 0
& !is.na(datos$Número.de.intentos)) , c(2:6)]
str(
datos[(datos$Nombre.del.estudiante == "naovel16"
& datos$Número.de.intentos >= 0
& !is.na(datos$Número.de.intentos)) , c(2:6)]
)
datos[(datos$Nombre.del.estudiante == "naovel16"
& datos$Número.de.intentos >= 0
& !is.na(datos$Número.de.intentos)) , c(2:6)]
str(
datos[(datos$Nombre.del.estudiante == "naovel16"
& datos$Número.de.intentos >= 0
& !is.na(datos$Número.de.intentos)) , c(2:6)]
)
str(
datos[(datos$Nombre.del.estudiante == "naovel16"
& datos$Número.de.intentos >= 0
& datos$Tipo.de.tarea != "Artículo" , c(2:6)]
str(
datos[(datos$Nombre.del.estudiante == "naovel16"
& datos$Número.de.intentos >= 0
& datos$Tipo.de.tarea != "Artículo") , c(2:6)]
)
datos <- read.csv(file.choose(), stringsAsFactors = TRUE)
str(datos)
summary(datos)
str(datos)
str(datos)
# Contar las filas por cada alumno
str(datos[ (datos$Nombre.del.estudiante == "naovel16"
& datos$Número.de.intentos >= 0
& datos$Tipo.de.tarea != "Artículo") , c(2:6)])
# O bien
str(datos[ (datos$Nombre.del.estudiante == "naovel16"
& datos$Número.de.intentos >= 0
& !is.na(datos$Número.de.intentos) ) , c(2:6)]
)
& datos$Tipo.de.tarea != "Artículo") , )
# Contar las filas por cada alumno
str(datos[ (datos$Nombre.del.estudiante == "naovel16"
& datos$Número.de.intentos >= 0
& datos$Tipo.de.tarea != "Artículo") , ])
datos[ (datos$Nombre.del.estudiante == "naovel16"
& datos$Número.de.intentos >= 0
& datos$Tipo.de.tarea != "Artículo") , ]
datos[ (datos$Nombre.del.estudiante == "naovel16"
& datos$Número.de.intentos >= 0
& datos$Tipo.de.tarea != "Artículo") , c(2:6, 10)]
datos[ (datos$Nombre.del.estudiante == "naovel16"
& datos$Número.de.intentos >= 0
& datos$Tipo.de.tarea != "Artículo") , c(2:6, 10)]
# O bien sin los NA en la columna "Número.de.intentos"
datos2 <- datos[ (datos$Número.de.intentos >= 0
& !is.na(datos$Número.de.intentos) ) , ]
ls()
datos2["Porc.Act"] <- datos2$Mejor.puntuación.obtenida / datos2$Puntos.posibles
str(datos)
str(datos2)
str(atos[(datos$Tipo.de.tarea != "Artículo") , c(2:6, 10)])
str(datos[(datos$Tipo.de.tarea != "Artículo") , c(2:6, 10)] )
datos <- read.csv(file.choose(), stringsAsFactors = TRUE)
# Eliminar columna de dirección web
datos["URL.de.la.tarea"] = NULL
str(datos)
summary(datos)
# Se genera nuevo Dataset sin actividades de "Artículo" y sin columnas de fechas
datos2 <- datos[(datos$Número.de.intentos >= 0
& datos$Tipo.de.tarea != "Artículo") , c(2:6, 10)]
str(datos2)
datos2
View(datos2)
View(datos)
# Se genera nuevo Dataset sin actividades de "Artículo" y sin columnas de fechas
datos2 <- datos[ datos$Tipo.de.tarea != "Artículo" , ]
str(datos2)
View(datos2)
summary(datos2)
# Nueva columna de porcentaje por actividad
datos2["Porc.Act"] <- datos2$Mejor.puntuación.obtenida / datos2$Puntos.posibles
str(datos2)
View(dato2)
View(dato2)
View(datos2)
datos2 <- datos2[ datos2$Nombre.del.estudiante == "jimenezgarciasandibel18", ]
str(datos)
# Se genera nuevo Dataset sin actividades de "Artículo" y sin columnas de fechas
datos2 <- datos[ datos$Tipo.de.tarea != "Artículo", ]
str(datos2)
alumnos <- unique(datos2$Nombre.del.estudiante)
alumnos
datos2[ datos2$Nombre.del.estudiante == alumnos[1], ]
alumnos
str(
datos2[ datos2$Nombre.del.estudiante == alumnos[1], ]
)
alumnos[1]
alumnos[2]
alumnos[3]
# Nueva columna porcentaje de cada actividad
datos2["Porc.Act"] <- datos2$Mejor.puntuación.obtenida / datos2$Puntos.posibles
datos2
View(datos2)
datos2[ , c(2:6, 10:11) ]
datos2[ , c(2:6, 10:11) ]
datos2[ datos2$Nombre.del.estudiante == alumnos[1], c(2:6, 10:11) ]
datos2[ datos2$Nombre.del.estudiante == alumnos[2], c(2:6, 10:11) ]
# Datos sin fechas
datos3 <- datos2[ , c(2:6, 10:11)]
datos3[ datos3$Nombre.del.estudiante == alumnos[2], ]
tapply(datos3$Porc.Act, datos3$Tipo.de.tarea, mean)
tapply(datos3$Porc.Act, datos3$Tipo.de.tarea, mean, na.rm = FALSE)
tapply(datos3$Porc.Act, datos3$Tipo.de.tarea, mean, na.rm = TRUE)
tapply(datos3$Porc.Act, datos3$Nombre.del.estudiante, mean, na.rm = TRUE)
datos3[is.na(datos3$Porc.Act), ]
summary(datos3)
datos3[is.na(datos3$Porc.Act), "Porc.Act"]
datos3[is.na(datos3$Porc.Act), "Porc.Act"] <- 0
summary(datos3)
tapply(datos3$Porc.Act, datos3$Nombre.del.estudiante, mean)
tapply(datos3$Porc.Act, datos3$Nombre.del.estudiante, mean)
datos <- read.csv(file.choose(), stringsAsFactors = TRUE)
# Eliminar columna de dirección web
datos["URL.de.la.tarea"] = NULL
# Se genera nuevo Dataset sin actividades de "Artículo" y sin columnas de fechas
datos2 <- datos[ datos$Tipo.de.tarea != "Artículo", c(2:6, 10:11)]
# Se genera nuevo Dataset sin actividades de "Artículo" y sin columnas de fechas
datos2 <- datos[ datos$Tipo.de.tarea != "Artículo", c(2:6, 10:11)]
View(datos)
# Se genera nuevo Dataset sin actividades de "Artículo" y sin columnas de fechas
datos2 <- datos[ datos$Tipo.de.tarea != "Artículo", c(2:6, 10)]
alumnos <- unique(datos2$Nombre.del.estudiante)
# Nueva columna porcentaje de cada actividad
datos2["Porc.Act"] <- datos2$Mejor.puntuación.obtenida / datos2$Puntos.posibles
# Puntajes sin tomar en cuenta los NA
tapply(datos2$Porc.Act, datos2$Nombre.del.estudiante, mean, na.rm = TRUE)
# Cambiando los NA calculados por ceros (no se intentó el ejercicio)
#summary(datos3)
datos3[is.na(datos3$Porc.Act), "Porc.Act"] <- 0
tapply(datos3$Porc.Act, datos3$Nombre.del.estudiante, mean)
# Eliminar columna de dirección web
datos["URL.de.la.tarea"] = NULL
# Se genera nuevo Dataset sin actividades de "Artículo" y sin columnas de fechas
datos2 <- datos[ datos$Tipo.de.tarea != "Artículo", c(2:6, 10)]
alumnos <- unique(datos2$Nombre.del.estudiante)
# Nueva columna porcentaje de cada actividad
datos2["Porc.Act"] <- datos2$Mejor.puntuación.obtenida / datos2$Puntos.posibles
# Puntajes sin tomar en cuenta los NA
tapply(datos2$Porc.Act, datos2$Nombre.del.estudiante, mean, na.rm = TRUE)
# Cambiando los NA calculados por ceros (no se intentó el ejercicio)
#summary(datos3)
datos2[is.na(datos2$Porc.Act), "Porc.Act"] <- 0
tapply(datos2$Porc.Act, datos2$Nombre.del.estudiante, mean)
datos <- read.csv(file.choose(), stringsAsFactors = TRUE)
summary(datos)
table(datos)
table(datos$MONTO.FACTURA)
table(datos$ZONA)
summary(datos)
str(datos)
norte <- nrow(datos[datos$ZONA == "NORTE")/nrow(datos$ZONA)
norte
norte <- nrow(datos[datos$ZONA == "NORTE", )/nrow(datos$ZONA)
norte <- nrow(datos[datos$ZONA == "NORTE", ])/nrow(datos$ZONA)
norte
datos[datos$ZONA == "NORTE", ]
nrow(datos[datos$ZONA == "NORTE", ])
datos$ZONA
nrow(datos$ZONA)
length(datos$ZONA)
length(datos$ZONA == "NORTE")
datos$ZONA == "NORTE"
str(datos)
summary(datos)
length(datos$ZONA)
length(datos$ZONA == "NORTE")
length(datos$ZONA != "NORTE")
datos$ZONA("NORTE")
datos$ZONA[datos$ZONA == "NORTE"]
norte <- length(datos$ZONA[datos$ZONA == "NORTE"])/ length(datos$ZONA)
norte
length(datos$ZONA[datos$ZONA == "NORTE"])
summary(datos)
31/50
sur <- length(datos$ZONA[datos$ZONA == "SUR"])/ length(datos$ZONA)
sur
str(datos)
tapply(datos$MONTO.FACTURA, datos$MONTO.FACTURA, mean)
tapply(datos$MONTO.FACTURA, datos$ZONA, mean)
tapply(datos$MONTO.FACTURA, datos$ZONA, sd)
datos[datos$ZONA == "NORTE", "MONTO.FACTURA"]
hist(datos[datos$ZONA == "NORTE", "MONTO.FACTURA"], main = "Norte")
hist(datos[datos$ZONA == "SUR", "MONTO.FACTURA"], main = "Sur")
shapiro.test(datos[datos$ZONA == "NORTE", "MONTO.FACTURA"])
shapiro.test(datos[datos$ZONA == "SUR", "MONTO.FACTURA"])
datos <- read.csv(file.choose(), stringsAsFactors = TRUE)
summary(datos)
str(datos)
norte <- length(datos$ZONA[datos$ZONA == "NORTE"])/ length(datos$ZONA)
sur <- length(datos$ZONA[datos$ZONA == "SUR"])/ length(datos$ZONA)
norte
sur
tapply(datos$MONTO.FACTURA, datos$ZONA, mean)
tapply(datos$MONTO.FACTURA, datos$ZONA, sd)
hist(datos[datos$ZONA == "NORTE", "MONTO.FACTURA"], main = "Norte")
hist(datos[datos$ZONA == "SUR", "MONTO.FACTURA"], main = "Sur")
dbinom(x = 0:10, size = 10, prob = 0.3)
data.frame(Prob = dbinom(x = 0:10, size = 10, prob = 0.3))
dnorm(0, 0, 1)
dnorm(10, 0, 1)
?dnorm
dnorm(x = 1, mean = , sd= 1)
dnorm(x = 1, mean = , sd= 1)
seq(70,130,length.out=20)
x<-seq(70,130,length.out=20)
y<-dnorm(x,100,10)
plot(x,y,type="l",main="Densidad de una N(100,10)",
plot(x,y,type="l",main="Densidad de una N(100,10)",
xlab="Valores de la variable",ylab="Densidad")
plot(x,y,type="l",main="Densidad de una N(100,10)",
xlab="Valores de la variable",ylab="Densidad")
x<-seq(70,130,length.out=20)
y<-dnorm(x,0,1)
plot(x,y,type="l",main="Densidad de una N(100,10)",
xlab="Valores de la variable",ylab="Densidad")
x<-seq(0,50,length.out=20)
y<-dnorm(x,0,1)
plot(x,y,type="l",main="Densidad de una N(100,10)",
xlab="Valores de la variable",ylab="Densidad")
x<-seq(70,130,length.out=20)
y<-dnorm(x,100,10)
plot(x,y,type="l",main="Densidad de una N(100,10)",
xlab="Valores de la variable",ylab="Densidad")
pnorm(q = 0.5, mean = 0, sd = 1, lower.tail = TRUE)
pnorm(q = 1, mean = 0, sd = 1, lower.tail = TRUE)
pnorm(q = 0, mean = 0, sd = 1, lower.tail = TRUE)
# Dado un valor en eje x devuelve prob acumulada
pnorm(q = 2, mean = 0, sd = 1, lower.tail = TRUE)
# Dado un valor en eje x devuelve prob acumulada
pnorm(q = 0.5, mean = 0, sd = 1, lower.tail = TRUE)
# Dado un valor en eje x devuelve prob acumulada
pnorm(q = 0.5, mean = 0, sd = 1, lower.tail = TRUE)
# Dado un valor en eje x devuelve prob acumulada
pnorm(q = 0.1, mean = 0, sd = 1, lower.tail = TRUE)
# Dado un valor en eje x devuelve prob acumulada
pnorm(q = -1, mean = 0, sd = 1, lower.tail = TRUE)
# Dado un valor en eje x devuelve prob acumulada
pnorm(q = 0, mean = 0, sd = 1, lower.tail = TRUE)
# Coordenadas en eje y
dnorm(x = 1:10, mean = , sd= 1)
# Coordenadas en eje y
dnorm(x = 1:10, mean = 0, sd= 1)
# Coordenadas en eje y
dnorm(x = 1:10, mean = 10, sd= 1)
# Coordenadas en eje y
dnorm(x = 1:10, mean = 100, sd= 1)
# Coordenadas en eje y
dnorm(x = 1:10, mean = 5, sd= 1)
# Coordenadas en eje y
dnorm(x = 1:50, mean = 5, sd= 1)
qnorm(p = 0.5, mean = 0, sd = 1, lower.tail = TRUE)
# Dado un valor de probabilidad devuelve valor eje x
qnorm(p = 0.1, mean = 0, sd = 1, lower.tail = TRUE)
#
rnorm(n = 10, mean = 0, sd = 1)
# Coordenadas en eje y
dnorm(x = 1:50, mean = 5, sd= 1)
dnorm(0) == 1/sqrt(2*pi)
# Coordenadas en eje y
dnorm(x = 0, mean = 5, sd= 1)
# Coordenadas en eje y
dnorm(x = 0, mean = 0, sd= 1)
1/sqrt(2*pi)
tapply(datos$MONTO.FACTURA, datos$ZONA, mean)
tapply(datos$MONTO.FACTURA, datos$ZONA, sd)
# Dado un valor en eje x devuelve prob acumulada
pnorm(q = 0, mean = 0, sd = 1, lower.tail = TRUE)
# Dado un valor en eje x devuelve prob acumulada
pnorm(q = 1, mean = 0, sd = 1, lower.tail = TRUE)
# Norte
pnorm(q = 30000, mean = 28468.37, sd = 10174.24, lower.tail =FALSE)
# Norte
pnorm(q = 30000, mean = 28468.37, sd = 10174.24, lower.tail =TRUE)
tapply(datos$MONTO.FACTURA, datos$ZONA, mean)
tapply(datos$MONTO.FACTURA, datos$ZONA, sd)
# Norte
pnorm(q = 30000, mean = 28468.37, sd = 10174.24, lower.tail = FALSE)
# SUr
pnorm(q = 30000, mean = 24450.76, sd = 10267.67, lower.tail = FALSE)
# Dado un valor en eje x devuelve prob acumulada
pnorm(q = 90, mean = 100, sd = 16, lower.tail = TRUE)
# Dado un valor de probabilidad devuelve valor eje x
qnorm(p = 0.005, mean = .8572, sd = 0.05, lower.tail = TRUE)
# Dado un valor de probabilidad devuelve valor eje x
qnorm(p = 0.005, mean = 0.8572, sd = 0.05199, lower.tail = TRUE)
x <- seq(70, 130, length.out = 20)
y <- dnorm(x, 100, 10)
plot(x, y, type = "l",
main = "Densidad de una N(100,10)",
xlab = "Valores de la variable",
ylab = "Densidad"
)
# NORTE
pnorm(q = 30000, mean = 28468.37, sd = 10174.24, lower.tail = FALSE)
# SUR
pnorm(q = 30000, mean = 24450.76, sd = 10267.67, lower.tail = FALSE)
# Da la probabilidad desde la izquierda dado un valor en eje x
pnorm(q = 3, mean = 4.885, sd = 1.653, lower.tail = TRUE)
# Da la probabilidad desde la izquierda dado un valor en eje x
pnorm(q = 6, mean = 4.885, sd = 1.653, lower.tail = FALSE)
netflix_titles <- read.csv("~/Descargas/netflix_titles.csv", stringsAsFactors=TRUE)
View(netflix_titles)
summary(netflix_titles)
encuesta <- read.table("~/Descargas/encuesta.csv", header=TRUE, quote="\"", stringsAsFactors=TRUE)
encuesta <- read.csv("~/Descargas/encuesta.csv", encoding="LATIN1", comment.char="#", stringsAsFactors=TRUE)
encuesta <- read.csv("~/Descargas/encuesta2.csv", stringsAsFactors=TRUE)
View(encuesta)
summary(encuesta)
View(encuesta)
datos <- read.csv("/home/dns/Descargas/encuesta.csv", header = TRUE, stringsAsFactors = TRUE)
View(encuesta)
View(encuesta)
summary(datos)
install.packages("dplyr")
library("dplyr")
library(dplyr)
install.packages("dplyr", dependencies = TRUE)
library(dplyr)
library(stats4, lib.loc = "/usr/lib/R/library")
detach("package:stats4", unload = TRUE)
install.packages("dplyr")
install.packages("fansi")
install.packages("dplyr", dependencies = TRUE)
library(dplyr)
library("dplyr")
install.packages("dplyr")
install.packages("dplyr")
quit()
setwd("~/Dropbox/Doc Ujat/Materiales/R/Bedu/Postwork_S08")
